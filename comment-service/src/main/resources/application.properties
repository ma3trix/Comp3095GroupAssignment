spring.application.name=comment-service
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=mongodb
spring.data.mongodb.username=mongoadmin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin

user.service.url=http://localhost:8084/api/user
#product-service (tomcat) running on 8989
server.port=8989

# Spring Actuator for Order-Service
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4J Configurations
resilience4j.circuitbreaker.instances.post.registerHealthIndicator=true
# determine how may events can be store in the ring buffer
resilience4j.circuitbreaker.instances.post.event-consumer-buffer-size=10
# Sliding window type can be either COUNT_BASED or TIME_BASED
resilience4j.circuitbreaker.instances.post.slidingWindowType=COUNT_BASED
# number of calls which are need to determine if the circuit breaker should be opened or closed
resilience4j.circuitbreaker.instances.post.slidingWindowSize=5
# sets the failure wait threshold
resilience4j.circuitbreaker.instances.post.failureRateThreshold=50
# sets the wait duration which specifies how long the CircuitBreaker should stay open, before it switches to half open
resilience4j.circuitbreaker.instances.post.waitDurationInOpenState=5s
# specifies the number of permitted calls when the CircuitBreaker is half open
resilience4j.circuitbreaker.instances.post.permittedNumberOfCallsInHalfOpenState=3
# enables automatic transition for OPEN to HALF_OPEN state once the wait duration has passed
resilience4j.circuitbreaker.instances.post.automaticTransitionFromOpenToHalfOpenEnabled=true

# Resilience4j Time limiter configurations
resilience4j.timelimiter.instances.post.timeoutDuration=3s

# Resilience4j Retry configurations
resilience4j.retry.instances.post.max-attempts=3
resilience4j.retry.instances.post.wait-duration=5s

# Zipkin
# is used to configure the endpoint where the traces are sent to
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name},%X{X-TraceId:-},%X{X-SpanId:-}]