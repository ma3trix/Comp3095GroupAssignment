version: '3.8'

services:

  user-service:
    image: user-service
    ports:
      - "8084:8084"
    build:
      context: ./user-service
      dockerfile: ./Dockerfile
    container_name: user-service-ss
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb-us
    networks:
      - spring

  post-service:
    image: post-service
    ports:
      - "8085:8085"
    build:
      context: ./post-service
      dockerfile: ./Dockerfile
    container_name: post-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb-ps
    networks:
      - spring

  #  comment-service:
  #    image: comment-service
  #    ports:
  #      - "8086:8086"
  #    build:
  #      context: ./comment-service
  #      dockerfile: ./Dockerfile
  #    container_name: comment-service
  #    environment:
  #      SPRING_PROFILES_ACTIVE: docker
  #    depends_on:
  #      - mongodb-comment
  #    networks:
  #      - spring

  friendship-service:
    image: friendship-service
    ports:
      - "8087:8087"
    build:
      context: ./friendship-service
      dockerfile: ./Dockerfile
    container_name: friendship-service
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://friendship-db:5432/friendship_database
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      - mongodb-fs
      - friendship-db
    networks:
      - spring

  mongodb-us:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb-us
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  mongodb-ps:
    image: mongo:latest
    ports:
      - "27018:27018"
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb-ps
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  #  mongodb-comment:
  #    image: mongo:latest
  #    ports:
  #      - "27019:27019"
  #    volumes:
  #      - ./data/mongo/products:/data/db
  #      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #    container_name: mongodb-comment
  #    restart: unless-stopped
  #    command: mongod --auth
  #    networks:
  #      - spring

  mongodb-fs:
    image: mongo:latest
    ports:
      - "27020:27020"
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb-fs
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  friendship-db:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: friendship_database
    container_name: friendship-db
    restart: unless-stopped

networks:
  spring:
    driver: bridge
